C51 COMPILER V9.54   DS1302                                                                11/17/2024 22:21:45 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\DS1302.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE DS1302.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\DS
                    -1302.lst) TABS(2) OBJECT(.\Objects\DS1302.obj)

line level    source

   1          /*************************************************
   2          Copyright (C), 2009-2012    , Level Chip Co., Ltd.
   3          文件名:  DS1302.c
   4          作  者: 钱锐      版本: V0.1.0     新建日期: 2024.11.17
   5          描  述: DS1302时钟模块
   6          备  注:  
   7          修改记录: 
   8          
   9            1.  日期: 2024.11.17
  10                作者: 钱锐
  11                内容:
  12                    1) 此为模板第一个版本;
  13                版本:V0.1.0
  14          
  15          *************************************************/
  16          #include <REGX52.H>
  17          #include <stdlib.h>
  18          
  19          #include "DS1302.h"
  20          
  21          #define DS1302_CE       P3_5
  22          #define DS1302_SCLK     P3_6
  23          #define DS1302_IO       P3_4
  24            
  25          #define DS1302_WRITE_SEC  0x80      //秒的写入基地址
  26          #define DS1302_WRITE_MINUTE 0x82      //分的写入基地址 
  27          #define DS1302_WRITE_HOUR   0x84      //时的写入基地址 
  28          #define DS1302_WRITE_DATE   0x86      //日的写入基地址 
  29          #define DS1302_WRITE_MONTH  0x88      //月的写入基地址 
  30          #define DS1302_WRITE_DAY  0x8A      //星期的写入基地址
  31          #define DS1302_WRITE_YEAR   0x8C      //年的写入基地址
  32          #define DS1302_WRITE_WP   0x8E      //写保护基地址  
  33          
  34          void DS1302_Init(void)
  35          {
  36   1        DS1302_CE = 0;
  37   1        DS1302_SCLK = 0;
  38   1        DS1302_IO = 0;
  39   1      
  40   1      //  WriteByte(0x8E, 0x00);
  41   1      //  WriteByte(0x80, 0x00);
  42   1      }
  43          
  44          void WriteByte(unsigned char _Command, _Data)
  45          {
  46   1        int i =0;
  47   1        
  48   1        DS1302_CE = 1;
  49   1        
  50   1        //写入数据需要特定的时序相对应才能成功写入
  51   1        for(i = 0; i < 8; ++i)
  52   1        {
  53   2          DS1302_IO = _Command & (0x01 << i);
  54   2          DS1302_SCLK = 1;
C51 COMPILER V9.54   DS1302                                                                11/17/2024 22:21:45 PAGE 2   

  55   2          
  56   2          //电平的变化时间不可以太短，具体DS1302芯片参考手册，因为DS1302线片时钟较小
             -，执行代码较慢，故不需要延时    
  57   2          DS1302_SCLK = 0;
  58   2        }
  59   1        
  60   1        for(i = 0; i < 8; ++i)
  61   1        {
  62   2          DS1302_IO = _Data & (0x01 << i);
  63   2          DS1302_SCLK = 1;
  64   2          DS1302_SCLK = 0;
  65   2        }
  66   1        
  67   1        DS1302_CE = 0;
  68   1      }
  69          
  70          unsigned char ReadByte(unsigned char _Command)
  71          {
  72   1        int i =0;
  73   1        unsigned char uchData = 0;
  74   1        
  75   1        DS1302_CE = 1;
  76   1        
  77   1        //读取数据需要特定的时序相对应才能成功写入
  78   1        for(i = 0; i < 8; ++i)
  79   1        {
  80   2          DS1302_IO = _Command & (0x01 << i);
  81   2          DS1302_SCLK = 0;
  82   2          
  83   2          //电平的变化时间不可以太短，具体DS1302芯片参考手册，因为DS1302线片时钟较小
             -，执行代码较慢，故不需要延时    
  84   2          DS1302_SCLK = 1;
  85   2        }
  86   1        
  87   1        for(i = 0; i < 8; ++i)
  88   1        {
  89   2          DS1302_SCLK = 1;
  90   2          DS1302_SCLK = 0;
  91   2          
  92   2          if(DS1302_IO)
  93   2            uchData |= (0x01 << i);
  94   2        }
  95   1        
  96   1        DS1302_CE = 0;
  97   1        DS1302_IO = 0;              //读取后将IO设置为0，否则读出的数据会出错
  98   1        return uchData;
  99   1      }
 100          
 101          void SetCurTime(DS1302_TIME _DS1302_Time)
 102          { 
 103   1        //寄存器内部的值采用BCD编码，故需要转换
 104   1        _DS1302_Time.Year = _DS1302_Time.Year / 10 * 16 + _DS1302_Time.Year % 10;
 105   1        _DS1302_Time.Month = _DS1302_Time.Month / 10 * 16 + _DS1302_Time.Month % 10;
 106   1        _DS1302_Time.Date = _DS1302_Time.Date / 10 * 16 + _DS1302_Time.Date % 10;
 107   1        _DS1302_Time.Hour = _DS1302_Time.Hour / 10 * 16 + _DS1302_Time.Hour % 10;
 108   1        _DS1302_Time.Minute = _DS1302_Time.Minute / 10 * 16 + _DS1302_Time.Minute % 10;
 109   1        _DS1302_Time.Sec = _DS1302_Time.Sec / 10 * 16 + _DS1302_Time.Sec % 10;
 110   1        
 111   1        WriteByte(DS1302_WRITE_WP, 0x00);
 112   1        WriteByte(DS1302_WRITE_YEAR, _DS1302_Time.Year);
 113   1        WriteByte(DS1302_WRITE_MONTH, _DS1302_Time.Month);
 114   1        WriteByte(DS1302_WRITE_DATE, _DS1302_Time.Date);
C51 COMPILER V9.54   DS1302                                                                11/17/2024 22:21:45 PAGE 3   

 115   1        WriteByte(DS1302_WRITE_HOUR, _DS1302_Time.Hour);
 116   1        WriteByte(DS1302_WRITE_MINUTE, _DS1302_Time.Minute);
 117   1        WriteByte(DS1302_WRITE_SEC, _DS1302_Time.Sec);
 118   1        WriteByte(DS1302_WRITE_WP, 0x80);
 119   1      }
 120          
 121          void GetCurTime(PDS1302_TIME _pDS1302_Time)
 122          {
 123   1        if(_pDS1302_Time == NULL)
 124   1          return;
 125   1        
 126   1        _pDS1302_Time->Year = ReadByte(DS1302_WRITE_YEAR | 0x01);
 127   1        _pDS1302_Time->Month = ReadByte(DS1302_WRITE_MONTH | 0x01);
 128   1        _pDS1302_Time->Date = ReadByte(DS1302_WRITE_DATE | 0x01);
 129   1        _pDS1302_Time->Hour = ReadByte(DS1302_WRITE_HOUR | 0x01);
 130   1        _pDS1302_Time->Minute = ReadByte(DS1302_WRITE_MINUTE | 0x01);
 131   1        _pDS1302_Time->Sec = ReadByte(DS1302_WRITE_SEC | 0x01);
 132   1        
 133   1        //寄存器内部的值采用BCD编码，故需要转换
 134   1        _pDS1302_Time->Year = _pDS1302_Time->Year / 16 * 10 + _pDS1302_Time->Year % 16;
 135   1        _pDS1302_Time->Month = _pDS1302_Time->Month / 16 * 10 + _pDS1302_Time->Month % 16;
 136   1        _pDS1302_Time->Date = _pDS1302_Time->Date / 16 * 10 + _pDS1302_Time->Date % 16;
 137   1        _pDS1302_Time->Hour = _pDS1302_Time->Hour / 16 * 10 + _pDS1302_Time->Hour % 16;
 138   1        _pDS1302_Time->Minute = _pDS1302_Time->Minute / 16 * 10 + _pDS1302_Time->Minute % 16;
 139   1        _pDS1302_Time->Sec = _pDS1302_Time->Sec / 16 * 10 + _pDS1302_Time->Sec % 16;
 140   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    774    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
