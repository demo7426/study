"""
Copyright (C), 2009-2012    , Level Chip Co., Ltd.
文件名:	main.py
作  者:	钱锐      版: V0.1.0     新建日期: 2025.07.27
描  述: 实现TORTOISE_ORM数据库操作
备  注:
修改记录:

  1.  日期: 2025.07.27
      作者: 钱锐
      内容:
          1) 此为模板第一个版本；
      版本:V0.1.0
"""

"""
--sql 语法，用于初始化fastapi数据库，mysql的fastapi数据库需要先手动创建

INSERT INTO clas (id, name) VALUES
(1, '高一一班'),
(2, '高一二班'),
(3, '高一三班'),
(4, '高二一班'),
(5, '高二二班'),
(6, '高二三班'),
(7, '高三一班'),
(8, '高三二班'),
(9, '高三三班'),
(10, '实验班');

INSERT INTO teacher (id, name, tno, pwd) VALUES
(1, '张老师', 1001, 'pwd001'),
(2, '李老师', 1002, 'pwd002'),
(3, '王老师', 1003, 'pwd003'),
(4, '赵老师', 1004, 'pwd004'),
(5, '钱老师', 1005, 'pwd005'),
(6, '孙老师', 1006, 'pwd006'),
(7, '周老师', 1007, 'pwd007'),
(8, '吴老师', 1008, 'pwd008'),
(9, '郑老师', 1009, 'pwd009'),
(10, '冯老师', 1010, 'pwd010');

INSERT INTO course (id, name, teacher_id) VALUES
(1, '语文', 1),
(2, '数学', 2),
(3, '英语', 3),
(4, '物理', 4),
(5, '化学', 5),
(6, '生物', 6),
(7, '历史', 7),
(8, '地理', 8),
(9, '政治', 9),
(10, '信息技术', 10);

-- 每个学生随机分配到 1~10 班级
INSERT INTO student (id, sno, pwd, name, clas_id) VALUES
(1, 20230001, 'pwd001', '学生1', 1),
(2, 20230002, 'pwd002', '学生2', 2),
(3, 20230003, 'pwd003', '学生3', 3),
(4, 20230004, 'pwd004', '学生4', 4),
(5, 20230005, 'pwd005', '学生5', 5),
(6, 20230006, 'pwd006', '学生6', 6),
(7, 20230007, 'pwd007', '学生7', 7),
(8, 20230008, 'pwd008', '学生8', 8),
(9, 20230009, 'pwd009', '学生9', 9),
(10, 20230010, 'pwd010', '学生10', 10),
(11, 20230011, 'pwd011', '学生11', 1),
(12, 20230012, 'pwd012', '学生12', 2),
(13, 20230013, 'pwd013', '学生13', 3),
(14, 20230014, 'pwd014', '学生14', 4),
(15, 20230015, 'pwd015', '学生15', 5),
(16, 20230016, 'pwd016', '学生16', 6),
(17, 20230017, 'pwd017', '学生17', 7),
(18, 20230018, 'pwd018', '学生18', 8),
(19, 20230019, 'pwd019', '学生19', 9),
(20, 20230020, 'pwd020', '学生20', 10),
(21, 20230021, 'pwd021', '学生21', 1),
(22, 20230022, 'pwd022', '学生22', 2),
(23, 20230023, 'pwd023', '学生23', 3),
(24, 20230024, 'pwd024', '学生24', 4),
(25, 20230025, 'pwd025', '学生25', 5),
(26, 20230026, 'pwd026', '学生26', 6),
(27, 20230027, 'pwd027', '学生27', 7),
(28, 20230028, 'pwd028', '学生28', 8),
(29, 20230029, 'pwd029', '学生29', 9),
(30, 20230030, 'pwd030', '学生30', 10),
(31, 20230031, 'pwd031', '学生31', 1),
(32, 20230032, 'pwd032', '学生32', 2),
(33, 20230033, 'pwd033', '学生33', 3),
(34, 20230034, 'pwd034', '学生34', 4),
(35, 20230035, 'pwd035', '学生35', 5),
(36, 20230036, 'pwd036', '学生36', 6),
(37, 20230037, 'pwd037', '学生37', 7),
(38, 20230038, 'pwd038', '学生38', 8),
(39, 20230039, 'pwd039', '学生39', 9),
(40, 20230040, 'pwd040', '学生40', 10),
(41, 20230041, 'pwd041', '学生41', 1),
(42, 20230042, 'pwd042', '学生42', 2),
(43, 20230043, 'pwd043', '学生43', 3),
(44, 20230044, 'pwd044', '学生44', 4),
(45, 20230045, 'pwd045', '学生45', 5),
(46, 20230046, 'pwd046', '学生46', 6),
(47, 20230047, 'pwd047', '学生47', 7),
(48, 20230048, 'pwd048', '学生48', 8),
(49, 20230049, 'pwd049', '学生49', 9),
(50, 20230050, 'pwd050', '学生50', 10);

INSERT INTO student_course (student_id, course_id) VALUES
(1, 1), (1, 2), (1, 3),
(2, 2), (2, 4), (2, 5),
(3, 3), (3, 6), (3, 7),
(4, 4), (4, 5), (4, 6),
(5, 1), (5, 7), (5, 8),
(6, 2), (6, 8), (6, 9),
(7, 3), (7, 9), (7, 10),
(8, 4), (8, 5), (8, 10),
(9, 1), (9, 3), (9, 6),
(10, 2), (10, 4), (10, 7),

(11, 5), (11, 6), (11, 8),
(12, 1), (12, 2), (12, 9),
(13, 3), (13, 4), (13, 10),
(14, 1), (14, 5), (14, 7),
(15, 2), (15, 6), (15, 9),
(16, 3), (16, 8), (16, 10),
(17, 4), (17, 7), (17, 10),
(18, 5), (18, 6), (18, 8),
(19, 1), (19, 3), (19, 9),
(20, 2), (20, 4), (20, 10),

(21, 1), (21, 5), (21, 6),
(22, 2), (22, 7), (22, 8),
(23, 3), (23, 9), (23, 10),
(24, 4), (24, 5), (24, 6),
(25, 1), (25, 2), (25, 8),
(26, 3), (26, 4), (26, 9),
(27, 5), (27, 6), (27, 10),
(28, 1), (28, 7), (28, 9),
(29, 2), (29, 8), (29, 10),
(30, 3), (30, 4), (30, 6),

(31, 1), (31, 2), (31, 3),
(32, 4), (32, 5), (32, 6),
(33, 7), (33, 8), (33, 9),
(34, 10), (34, 1), (34, 2),
(35, 3), (35, 4), (35, 5),
(36, 6), (36, 7), (36, 8),
(37, 9), (37, 10), (37, 1),
(38, 2), (38, 3), (38, 4),
(39, 5), (39, 6), (39, 7),
(40, 8), (40, 9), (40, 10),

(41, 1), (41, 4), (41, 7),
(42, 2), (42, 5), (42, 8),
(43, 3), (43, 6), (43, 9),
(44, 1), (44, 5), (44, 10),
(45, 2), (45, 6), (45, 7),
(46, 3), (46, 8), (46, 9),
(47, 4), (47, 7), (47, 10),
(48, 5), (48, 8), (48, 9),
(49, 6), (49, 9), (49, 10),
(50, 1), (50, 2), (50, 3);

"""

import uvicorn
from fastapi import FastAPI
from tortoise.contrib.fastapi import register_tortoise
from settings import TORTOISE_ORM

from student import g_student_router

app = FastAPI(debug=True)

app.include_router(g_student_router, prefix="/student", tags=["学生信息"])

# 该方法会在fastapi启动时触发，内部通过传递进去的app对象，监听服务启动和终止事件
# 当检测到启动事件时，会初始化Tortoise对象，如果generate_schemas为True则还会进行数据库迁移
# 当检测到终止事件时，会关闭连接
register_tortoise(
    app,
    config=TORTOISE_ORM,
    # generate_schemas=True,  # 如果数据库为空，则自动生成对应表单，生产环境不要开
    # add_exception_handlers=True,  # 生产环境不要开，会泄露调试信息
)

if __name__ == '__main__':
    uvicorn.run('main:app', host='127.0.0.1', port=8080, reload=True)